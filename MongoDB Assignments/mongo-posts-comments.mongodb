// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('mongodbVSCodePlaygroundDB');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.sales.drop();

use('mongo_practice');

db.createCollection('posts');

use('mongo_practice');

db.users.insertMany(
    [
        {username : "GoodGuyGreg",
        first_name : "Good Guy",
        last_name : "Greg"
        },
        {
            username : "ScumbagSteve",
            full_name :
            {
                first : "Scumbag",
                last : "Steve"
            }
        }
    ]
)

db.posts.insertMany([
  {
  username : "GoodGuyGreg",
  title : "Passes out at party",
  body : "Wakes up early and cleans house"
  },

  {
  username : "GoodGuyGreg",
  title : "Steals your identity",
  body : "Raises your credit score"
  },

  {
  username : "GoodGuyGreg",
  title : "Reports a bug in your code",
  body : "Sends you a Pull Request"
  },

  {
  username : "ScumbagSteve",
  title : "Borrows something",
  body : "Sells it"
  },

  {
  username : "ScumbagSteve",
  title : "Borrows everything",
  body : "The end"
  },

  {
  username : "ScumbagSteve",
  title : "Forks your repo on github",
  body : "Sets to private"
  }
])

use('mongo_practice')

db.users.find({})

db.posts.find({})

use('mongo_practice')

db.createCollection('comments')


use('mongo_practice')

db.comments.insertMany([

{
username : "GoodGuyGreg",
comment : "Hope you got a good deal!",
post : ["60a75c97149f47319e2dae13"]
},

{
username : "GoodGuyGreg",
comment : "What's mine is yours!",
post : ["60a75c97149f47319e2dae14"]
},

{
username : "GoodGuyGreg",
comment : "Don't violate the licensing agreement!",
post : ["60a75c97149f47319e2dae15"]
},

{
username : "ScumbagSteve",
comment : "It still isn't clean",
post : ["60a75c97149f47319e2dae10"]
},

{
username : "ScumbagSteve",
comment : "Denied your PR cause I found a hack",
post : ["60a75c97149f47319e2dae12"]
}

])

use('mongo_practice')

db.comments.find({})


use('mongo_practice')

db.users.find({})


use('mongo_practice')

db.posts.find({})


use('mongo_practice')

db.posts.find({username: "GoodGuyGreg"})

use('mongo_practice')

db.posts.find({username: "ScumbagSteve"})

use('mongo_practice')

db.comments.find({})


use('mongo_practice')

db.comments.find({username: "GoodGuyGreg"})


use('mongo_practice')

db.comments.find({username: "ScumbagSteve"})






use('mongo_practice')

db.comments.insertMany([

{
username : "GoodGuyGreg",
comment : "Hope you got a good deal!",
post : "60a75c97149f47319e2dae13"
},

{
username : "GoodGuyGreg",
comment : "What's mine is yours!",
post : "60a75c97149f47319e2dae14"
},

{
username : "GoodGuyGreg",
comment : "Don't violate the licensing agreement!",
post : "60a75c97149f47319e2dae15"
},

{
username : "ScumbagSteve",
comment : "It still isn't clean",
post : "60a75c97149f47319e2dae10"
},

{
username : "ScumbagSteve",
comment : "Denied your PR cause I found a hack",
post : "60a75c97149f47319e2dae12"
}

])


use('mongo_practice')

db.comments.find({post: "60a75c97149f47319e2dae12"})
























// Insert a few documents into the sales collection.
db.sales.insertMany([
  { '_id': 1, 'item': 'abc', 'price': 10, 'quantity': 2, 'date': new Date('2014-03-01T08:00:00Z') },
  { '_id': 2, 'item': 'jkl', 'price': 20, 'quantity': 1, 'date': new Date('2014-03-01T09:00:00Z') },
  { '_id': 3, 'item': 'xyz', 'price': 5, 'quantity': 10, 'date': new Date('2014-03-15T09:00:00Z') },
  { '_id': 4, 'item': 'xyz', 'price': 5, 'quantity':  20, 'date': new Date('2014-04-04T11:21:39.736Z') },
  { '_id': 5, 'item': 'abc', 'price': 10, 'quantity': 10, 'date': new Date('2014-04-04T21:23:13.331Z') },
  { '_id': 6, 'item': 'def', 'price': 7.5, 'quantity': 5, 'date': new Date('2015-06-04T05:08:13Z') },
  { '_id': 7, 'item': 'def', 'price': 7.5, 'quantity': 10, 'date': new Date('2015-09-10T08:43:00Z') },
  { '_id': 8, 'item': 'abc', 'price': 10, 'quantity': 5, 'date': new Date('2016-02-06T20:20:13Z') },
]);

// Run a find command to view items sold on April 4th, 2014.
db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// Build an aggregation to view total sales for each product in 2014.
const aggregation = [
  { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
  { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
];

// Run the aggregation and open a cursor to the results.
// Use toArray() to exhaust the cursor to return the whole result set.
// You can use hasNext()/next() to iterate through the cursor page by page.
db.sales.aggregate(aggregation);
